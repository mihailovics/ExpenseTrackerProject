@model IEnumerable<ExpenseTracker.Models.Expense>

@{
    ViewData["Title"] = "Get Expenses";
}

<h1 class="text-center">Expenses</h1>

<p>
    <a asp-action="NewExpense">Add new Expense</a>
</p>
<p class="d-flex justify-content-center">
    Sum of shown Expenses: @ViewBag.ExpenseSum
</p>
<p class="d-flex justify-content-center">
    Balance: @ViewBag.Balance
</p>


<div class="form-container">
    <h2>Filter Expenses</h2>
    <form id="filterForm" method="get" action="/Expense/GetExpenses">
        <div class="filter-grid">
            <div>
                <label for="year" class="form-label">Year</label>
                <select id="year" name="year" class="form-control">
                    <option value="">Select Year</option>
                    @foreach (var year in (List<int>)ViewBag.Years)
                    {
                        <option value="@year" selected="@(year == ViewBag.SelectedYear ? "selected" : null)">@year</option>
                    }
                </select>
            </div>

            <div>
                <label for="month" class="form-label">Month</label>
                <select id="month" name="month" class="form-control">
                    <option value="">Select Month</option>
                    @foreach (var month in (List<int>)ViewBag.Months)
                    {
                        <option value="@month" selected="@(month == ViewBag.SelectedMonth ? "selected" : null)">@month</option>
                    }
                </select>
            </div>

            <div>
                <label for="source" class="form-label">Source</label>
                <select id="source" name="source" class="form-control">
                    <option value="">Select Source</option>
                    @foreach (var source in (List<int>)ViewBag.Sources)
                    {
                        <option value="@source" selected="@(source == ViewBag.SelectedSource ? "selected" : null)">@source</option>
                    }
                </select>
            </div>

            <div>
                <label for="pageSize" class="form-label">Items Per Page</label>
                <select id="pageSize" name="pageSize" class="form-control">
                    <option value="5" selected="@(ViewBag.PageSize == 5 ? "selected" : null)">5 per page</option>
                    <option value="10" selected="@(ViewBag.PageSize == 10 ? "selected" : null)">10 per page</option>
                    <option value="20" selected="@(ViewBag.PageSize == 20 ? "selected" : null)">20 per page</option>
                </select>
            </div>
        </div>
    </form>
</div>
@if (Model.Count() > 0 ){
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ExpenseAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Source)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayName("Delete")
                @Html.DisplayName("Edit")
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ExpenseAmount) EUR
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Source)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>|
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
            </td>
        </tr>
}
    </tbody>
</table>
    <nav class="d-flex justify-content-center">
        <ul class="pagination">
            <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="/Expense/GetExpenses?pageNumber=@(ViewBag.CurrentPage - 1)&pageSize=@ViewBag.PageSize&year=@ViewBag.SelectedYear&month=@ViewBag.SelectedMonth&source=@ViewBag.SelectedSource">Previous</a>
            </li>

            @for (int i = 1; i <= @ViewBag.TotalPages; i++)
            {
                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="/Expense/GetExpenses?pageNumber=@i&pageSize=@ViewBag.PageSize&year=@ViewBag.SelectedYear&month=@ViewBag.SelectedMonth&source=@ViewBag.SelectedSource">@i</a>
                </li>
            }

            <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                <a class="page-link" href="/Expense/GetExpenses?pageNumber=@(ViewBag.CurrentPage + 1)&pageSize=@ViewBag.PageSize&year=@ViewBag.SelectedYear&month=@ViewBag.SelectedMonth&source=@ViewBag.SelectedSource">Next</a>
            </li>
        </ul>
    </nav>
    <p class="d-flex justify-content-center">
        Notice! : Consider reconfiguring allowed minus when deleting Expense because whole sum is getting put in Balance
    </p>

    <script>

        document.addEventListener("DOMContentLoaded", function () {

            const yearDropdown = document.getElementById("year");
            const monthDropdown = document.querySelector("select[name='month']");
            const sourceDropdown = document.querySelector("select[name='source']");
            const pageSizeDropdown = document.querySelector("select[name='pageSize']");


            yearDropdown.addEventListener("change", submitForm);
            monthDropdown.addEventListener("change", submitForm);
            sourceDropdown.addEventListener("change", submitForm);
            pageSizeDropdown.addEventListener("change", submitForm);


            function submitForm() {
                document.getElementById("filterForm").submit();
            }
        });
    </script>
}
else{
    <p>No Expense result.</p>
}
