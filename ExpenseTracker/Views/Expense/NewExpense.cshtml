@model ExpenseTracker.Models.Expense

@{
    ViewData["Title"] = "NewExpense";
}

<h1 class="text-center">New Expense</h1>

<h4 class="text-center">Expense</h4>
<hr />
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}
<div class="row">
    <div class="col-lg-12 d-flex justify-content-center text-center">
        <form asp-action="NewExpense">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ExpenseAmount" class="control-label"></label>
                <input asp-for="ExpenseAmount" class="form-control" />
                <span asp-validation-for="ExpenseAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Source" class="control-label"></label>
                <input asp-for="Source" class="form-control" />
                <span asp-validation-for="Source" class="text-danger"></span>
            </div>
            
            <div class="form-group pt-3">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="d-flex justify-content-center">
    <a href="/Expense/GetExpenses">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
