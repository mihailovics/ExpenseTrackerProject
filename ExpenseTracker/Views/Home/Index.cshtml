@{
    ViewData["Title"] = "Home Page";
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}
<div class="container mt-4">
    <div class="grid grid-cols-2 gap-6">
        <div class="dashboard-card bg-green-500/20 border border-green-400">
            <a class="dashboard-button" href="/Income">
                <h5>Total Income</h5>
                <h2>€ @ViewBag.TotalIncome.ToString("N2")</h2>
            </a>
        </div>

        <div class="dashboard-card bg-red-500/20 border border-red-400">
            <a class="dashboard-button" href="/Expense">
                <h5>Total Expense</h5>
                <h2>€ @ViewBag.TotalExpense.ToString("N2")</h2>
            </a>
        </div>
        
        <div class="dashboard-card bg-blue-500/20 border border-blue-400">
            <a class="dashboard-button" href="/Identity/Account/Manage">
                <h5>Balance</h5>
                <h2>€ @ViewBag.Balance.ToString("N2")</h2>
            </a>
        </div>

        <div class="dashboard-card bg-yellow-500/20 border border-yellow-400">
            <a class="dashboard-button" href="/Identity/Account/Manage">
                <h5>Allowed Minus</h5>
                <h2>€ @ViewBag.AllowedMinus.ToString("N2")</h2>
            </a>
        </div>
    </div>
    <div class="charts-container">
        <div class="chart-card col-lg-3">
            <h3>Income by Source</h3>
            <canvas id="incomeChart"></canvas>
        </div>

        <div class="chart-card col-lg-3">
            <h3>Expenses by Source</h3>
            <canvas id="expenseChart"></canvas>
        </div>
    </div>
</div>

    <!-- Charts -->
    
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var incomeCtx = document.getElementById("incomeChart").getContext("2d");
        var expenseCtx = document.getElementById("expenseChart").getContext("2d");

        new Chart(expenseCtx, {
            type: "bar",
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.ExpenseLabels)),
                datasets: [{
                    label: "Total Expense",
                    data: @Html.Raw(Json.Serialize(ViewBag.ExpenseData)),
                    backgroundColor: "rgba(0, 255, 255, 0.3)",
                    borderColor: "rgba(0, 255, 255, 0.7)",
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: { y: { beginAtZero: true } }
            }
        });
        new Chart(incomeCtx, {
            type: "bar",
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.Labels)),
                datasets: [{
                    label: "Total Income",
                    data: @Html.Raw(Json.Serialize(ViewBag.Data)),
                    backgroundColor: "rgba(0, 255, 255, 0.3)",
                    borderColor: "rgba(0, 255, 255, 0.7)",
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    });
</script>
